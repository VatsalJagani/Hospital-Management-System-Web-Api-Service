#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hms_db")]
	public partial class hmsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    partial void Insertcheckin(checkin instance);
    partial void Updatecheckin(checkin instance);
    partial void Deletecheckin(checkin instance);
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertlab_report(lab_report instance);
    partial void Updatelab_report(lab_report instance);
    partial void Deletelab_report(lab_report instance);
    partial void Insertmedical_bill(medical_bill instance);
    partial void Updatemedical_bill(medical_bill instance);
    partial void Deletemedical_bill(medical_bill instance);
    partial void Insertoperation_th(operation_th instance);
    partial void Updateoperation_th(operation_th instance);
    partial void Deleteoperation_th(operation_th instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertplace(place instance);
    partial void Updateplace(place instance);
    partial void Deleteplace(place instance);
    partial void Insertroom(room instance);
    partial void Updateroom(room instance);
    partial void Deleteroom(room instance);
    partial void Inserttreatment(treatment instance);
    partial void Updatetreatment(treatment instance);
    partial void Deletetreatment(treatment instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public hmsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["hms_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hmsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
		
		public System.Data.Linq.Table<checkin> checkins
		{
			get
			{
				return this.GetTable<checkin>();
			}
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<lab_report> lab_reports
		{
			get
			{
				return this.GetTable<lab_report>();
			}
		}
		
		public System.Data.Linq.Table<medical_bill> medical_bills
		{
			get
			{
				return this.GetTable<medical_bill>();
			}
		}
		
		public System.Data.Linq.Table<operation_th> operation_ths
		{
			get
			{
				return this.GetTable<operation_th>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<place> places
		{
			get
			{
				return this.GetTable<place>();
			}
		}
		
		public System.Data.Linq.Table<room> rooms
		{
			get
			{
				return this.GetTable<room>();
			}
		}
		
		public System.Data.Linq.Table<treatment> treatments
		{
			get
			{
				return this.GetTable<treatment>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private decimal _checkin_no;
		
		private decimal _bill_no;
		
		private decimal _bill_by;
		
		private System.Nullable<System.DateTime> _bill_date;
		
		private decimal _doctor_fee;
		
		private decimal _room_fee;
		
		private decimal _lab_fee;
		
		private decimal _medical_fee;
		
		private decimal _op_fee;
		
		private decimal _other_fee;
		
		private EntityRef<checkin> _checkin;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void Oncheckin_noChanging(decimal value);
    partial void Oncheckin_noChanged();
    partial void Onbill_noChanging(decimal value);
    partial void Onbill_noChanged();
    partial void Onbill_byChanging(decimal value);
    partial void Onbill_byChanged();
    partial void Onbill_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbill_dateChanged();
    partial void Ondoctor_feeChanging(decimal value);
    partial void Ondoctor_feeChanged();
    partial void Onroom_feeChanging(decimal value);
    partial void Onroom_feeChanged();
    partial void Onlab_feeChanging(decimal value);
    partial void Onlab_feeChanged();
    partial void Onmedical_feeChanging(decimal value);
    partial void Onmedical_feeChanged();
    partial void Onop_feeChanging(decimal value);
    partial void Onop_feeChanged();
    partial void Onother_feeChanging(decimal value);
    partial void Onother_feeChanged();
    #endregion
		
		public bill()
		{
			this._checkin = default(EntityRef<checkin>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal checkin_no
		{
			get
			{
				return this._checkin_no;
			}
			set
			{
				if ((this._checkin_no != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckin_noChanging(value);
					this.SendPropertyChanging();
					this._checkin_no = value;
					this.SendPropertyChanged("checkin_no");
					this.Oncheckin_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal bill_no
		{
			get
			{
				return this._bill_no;
			}
			set
			{
				if ((this._bill_no != value))
				{
					this.Onbill_noChanging(value);
					this.SendPropertyChanging();
					this._bill_no = value;
					this.SendPropertyChanged("bill_no");
					this.Onbill_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal bill_by
		{
			get
			{
				return this._bill_by;
			}
			set
			{
				if ((this._bill_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbill_byChanging(value);
					this.SendPropertyChanging();
					this._bill_by = value;
					this.SendPropertyChanged("bill_by");
					this.Onbill_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_date", DbType="Date")]
		public System.Nullable<System.DateTime> bill_date
		{
			get
			{
				return this._bill_date;
			}
			set
			{
				if ((this._bill_date != value))
				{
					this.Onbill_dateChanging(value);
					this.SendPropertyChanging();
					this._bill_date = value;
					this.SendPropertyChanged("bill_date");
					this.Onbill_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal doctor_fee
		{
			get
			{
				return this._doctor_fee;
			}
			set
			{
				if ((this._doctor_fee != value))
				{
					this.Ondoctor_feeChanging(value);
					this.SendPropertyChanging();
					this._doctor_fee = value;
					this.SendPropertyChanged("doctor_fee");
					this.Ondoctor_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal room_fee
		{
			get
			{
				return this._room_fee;
			}
			set
			{
				if ((this._room_fee != value))
				{
					this.Onroom_feeChanging(value);
					this.SendPropertyChanging();
					this._room_fee = value;
					this.SendPropertyChanged("room_fee");
					this.Onroom_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal lab_fee
		{
			get
			{
				return this._lab_fee;
			}
			set
			{
				if ((this._lab_fee != value))
				{
					this.Onlab_feeChanging(value);
					this.SendPropertyChanging();
					this._lab_fee = value;
					this.SendPropertyChanged("lab_fee");
					this.Onlab_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal medical_fee
		{
			get
			{
				return this._medical_fee;
			}
			set
			{
				if ((this._medical_fee != value))
				{
					this.Onmedical_feeChanging(value);
					this.SendPropertyChanging();
					this._medical_fee = value;
					this.SendPropertyChanged("medical_fee");
					this.Onmedical_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_op_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal op_fee
		{
			get
			{
				return this._op_fee;
			}
			set
			{
				if ((this._op_fee != value))
				{
					this.Onop_feeChanging(value);
					this.SendPropertyChanging();
					this._op_fee = value;
					this.SendPropertyChanged("op_fee");
					this.Onop_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_fee", DbType="Decimal(8,2) NOT NULL")]
		public decimal other_fee
		{
			get
			{
				return this._other_fee;
			}
			set
			{
				if ((this._other_fee != value))
				{
					this.Onother_feeChanging(value);
					this.SendPropertyChanging();
					this._other_fee = value;
					this.SendPropertyChanged("other_fee");
					this.Onother_feeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_bill", Storage="_checkin", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no", IsForeignKey=true)]
		public checkin checkin
		{
			get
			{
				return this._checkin.Entity;
			}
			set
			{
				checkin previousValue = this._checkin.Entity;
				if (((previousValue != value) 
							|| (this._checkin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._checkin.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._checkin.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._pid = value.pid;
						this._checkin_no = value.checkin_no;
					}
					else
					{
						this._pid = default(decimal);
						this._checkin_no = default(decimal);
					}
					this.SendPropertyChanged("checkin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_employee", ThisKey="bill_by", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._bill_by = value.empid;
					}
					else
					{
						this._bill_by = default(decimal);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.checkin")]
	public partial class checkin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private decimal _checkin_no;
		
		private decimal _checkin_by;
		
		private System.Nullable<decimal> _room;
		
		private System.Nullable<System.DateTime> _in_time;
		
		private System.Nullable<System.DateTime> _out_time;
		
		private EntitySet<bill> _bills;
		
		private EntitySet<lab_report> _lab_reports;
		
		private EntitySet<medical_bill> _medical_bills;
		
		private EntitySet<treatment> _treatments;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<patient> _patient;
		
		private EntityRef<room> _room1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void Oncheckin_noChanging(decimal value);
    partial void Oncheckin_noChanged();
    partial void Oncheckin_byChanging(decimal value);
    partial void Oncheckin_byChanged();
    partial void OnroomChanging(System.Nullable<decimal> value);
    partial void OnroomChanged();
    partial void Onin_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onin_timeChanged();
    partial void Onout_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onout_timeChanged();
    #endregion
		
		public checkin()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._lab_reports = new EntitySet<lab_report>(new Action<lab_report>(this.attach_lab_reports), new Action<lab_report>(this.detach_lab_reports));
			this._medical_bills = new EntitySet<medical_bill>(new Action<medical_bill>(this.attach_medical_bills), new Action<medical_bill>(this.detach_medical_bills));
			this._treatments = new EntitySet<treatment>(new Action<treatment>(this.attach_treatments), new Action<treatment>(this.detach_treatments));
			this._employee = default(EntityRef<employee>);
			this._patient = default(EntityRef<patient>);
			this._room1 = default(EntityRef<room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal checkin_no
		{
			get
			{
				return this._checkin_no;
			}
			set
			{
				if ((this._checkin_no != value))
				{
					this.Oncheckin_noChanging(value);
					this.SendPropertyChanging();
					this._checkin_no = value;
					this.SendPropertyChanged("checkin_no");
					this.Oncheckin_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal checkin_by
		{
			get
			{
				return this._checkin_by;
			}
			set
			{
				if ((this._checkin_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckin_byChanging(value);
					this.SendPropertyChanging();
					this._checkin_by = value;
					this.SendPropertyChanged("checkin_by");
					this.Oncheckin_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					if (this._room1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> in_time
		{
			get
			{
				return this._in_time;
			}
			set
			{
				if ((this._in_time != value))
				{
					this.Onin_timeChanging(value);
					this.SendPropertyChanging();
					this._in_time = value;
					this.SendPropertyChanged("in_time");
					this.Onin_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_out_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> out_time
		{
			get
			{
				return this._out_time;
			}
			set
			{
				if ((this._out_time != value))
				{
					this.Onout_timeChanging(value);
					this.SendPropertyChanging();
					this._out_time = value;
					this.SendPropertyChanged("out_time");
					this.Onout_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_bill", Storage="_bills", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_lab_report", Storage="_lab_reports", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no")]
		public EntitySet<lab_report> lab_reports
		{
			get
			{
				return this._lab_reports;
			}
			set
			{
				this._lab_reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_medical_bill", Storage="_medical_bills", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no")]
		public EntitySet<medical_bill> medical_bills
		{
			get
			{
				return this._medical_bills;
			}
			set
			{
				this._medical_bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_treatment", Storage="_treatments", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no")]
		public EntitySet<treatment> treatments
		{
			get
			{
				return this._treatments;
			}
			set
			{
				this._treatments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_checkin", Storage="_employee", ThisKey="checkin_by", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.checkins.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.checkins.Add(this);
						this._checkin_by = value.empid;
					}
					else
					{
						this._checkin_by = default(decimal);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_checkin", Storage="_patient", ThisKey="pid", OtherKey="pid", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.checkins.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.checkins.Add(this);
						this._pid = value.pid;
					}
					else
					{
						this._pid = default(decimal);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_checkin", Storage="_room1", ThisKey="room", OtherKey="room_no", IsForeignKey=true)]
		public room room1
		{
			get
			{
				return this._room1.Entity;
			}
			set
			{
				room previousValue = this._room1.Entity;
				if (((previousValue != value) 
							|| (this._room1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._room1.Entity = null;
						previousValue.checkins.Remove(this);
					}
					this._room1.Entity = value;
					if ((value != null))
					{
						value.checkins.Add(this);
						this._room = value.room_no;
					}
					else
					{
						this._room = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("room1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.checkin = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.checkin = null;
		}
		
		private void attach_lab_reports(lab_report entity)
		{
			this.SendPropertyChanging();
			entity.checkin = this;
		}
		
		private void detach_lab_reports(lab_report entity)
		{
			this.SendPropertyChanging();
			entity.checkin = null;
		}
		
		private void attach_medical_bills(medical_bill entity)
		{
			this.SendPropertyChanging();
			entity.checkin = this;
		}
		
		private void detach_medical_bills(medical_bill entity)
		{
			this.SendPropertyChanging();
			entity.checkin = null;
		}
		
		private void attach_treatments(treatment entity)
		{
			this.SendPropertyChanging();
			entity.checkin = this;
		}
		
		private void detach_treatments(treatment entity)
		{
			this.SendPropertyChanging();
			entity.checkin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _doctorid;
		
		private decimal _userid;
		
		private string _name;
		
		private string _contact_no;
		
		private string _address;
		
		private string _city;
		
		private bool _gender;
		
		private string _info;
		
		private EntitySet<treatment> _treatments;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndoctoridChanging(decimal value);
    partial void OndoctoridChanged();
    partial void OnuseridChanging(decimal value);
    partial void OnuseridChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncontact_noChanging(string value);
    partial void Oncontact_noChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    #endregion
		
		public doctor()
		{
			this._treatments = new EntitySet<treatment>(new Action<treatment>(this.attach_treatments), new Action<treatment>(this.detach_treatments));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctorid", AutoSync=AutoSync.OnInsert, DbType="Decimal(4,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal doctorid
		{
			get
			{
				return this._doctorid;
			}
			set
			{
				if ((this._doctorid != value))
				{
					this.OndoctoridChanging(value);
					this.SendPropertyChanging();
					this._doctorid = value;
					this.SendPropertyChanged("doctorid");
					this.OndoctoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Decimal(4,0) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="VarChar(13)")]
		public string contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="VarChar(100)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_treatment", Storage="_treatments", ThisKey="doctorid", OtherKey="checkup_by")]
		public EntitySet<treatment> treatments
		{
			get
			{
				return this._treatments;
			}
			set
			{
				this._treatments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_doctor", Storage="_user", ThisKey="userid", OtherKey="userid", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.doctors.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.doctors.Add(this);
						this._userid = value.userid;
					}
					else
					{
						this._userid = default(decimal);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_treatments(treatment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_treatments(treatment entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _empid;
		
		private decimal _userid;
		
		private string _emp_type;
		
		private string _name;
		
		private string _contact_no;
		
		private string _address;
		
		private string _city;
		
		private bool _marital_status;
		
		private bool _gender;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private System.Nullable<System.DateTime> _job_start;
		
		private System.Nullable<System.DateTime> _job_end;
		
		private EntitySet<bill> _bills;
		
		private EntitySet<checkin> _checkins;
		
		private EntitySet<lab_report> _lab_reports;
		
		private EntitySet<medical_bill> _medical_bills;
		
		private EntitySet<patient> _patients;
		
		private EntitySet<place> _places;
		
		private EntitySet<place> _places1;
		
		private EntitySet<place> _places2;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempidChanging(decimal value);
    partial void OnempidChanged();
    partial void OnuseridChanging(decimal value);
    partial void OnuseridChanged();
    partial void Onemp_typeChanging(string value);
    partial void Onemp_typeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncontact_noChanging(string value);
    partial void Oncontact_noChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onmarital_statusChanging(bool value);
    partial void Onmarital_statusChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void Onjob_startChanging(System.Nullable<System.DateTime> value);
    partial void Onjob_startChanged();
    partial void Onjob_endChanging(System.Nullable<System.DateTime> value);
    partial void Onjob_endChanged();
    #endregion
		
		public employee()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._checkins = new EntitySet<checkin>(new Action<checkin>(this.attach_checkins), new Action<checkin>(this.detach_checkins));
			this._lab_reports = new EntitySet<lab_report>(new Action<lab_report>(this.attach_lab_reports), new Action<lab_report>(this.detach_lab_reports));
			this._medical_bills = new EntitySet<medical_bill>(new Action<medical_bill>(this.attach_medical_bills), new Action<medical_bill>(this.detach_medical_bills));
			this._patients = new EntitySet<patient>(new Action<patient>(this.attach_patients), new Action<patient>(this.detach_patients));
			this._places = new EntitySet<place>(new Action<place>(this.attach_places), new Action<place>(this.detach_places));
			this._places1 = new EntitySet<place>(new Action<place>(this.attach_places1), new Action<place>(this.detach_places1));
			this._places2 = new EntitySet<place>(new Action<place>(this.attach_places2), new Action<place>(this.detach_places2));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", AutoSync=AutoSync.OnInsert, DbType="Decimal(4,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Decimal(4,0) NOT NULL")]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string emp_type
		{
			get
			{
				return this._emp_type;
			}
			set
			{
				if ((this._emp_type != value))
				{
					this.Onemp_typeChanging(value);
					this.SendPropertyChanging();
					this._emp_type = value;
					this.SendPropertyChanged("emp_type");
					this.Onemp_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="VarChar(13)")]
		public string contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="Bit NOT NULL")]
		public bool marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_start", DbType="Date")]
		public System.Nullable<System.DateTime> job_start
		{
			get
			{
				return this._job_start;
			}
			set
			{
				if ((this._job_start != value))
				{
					this.Onjob_startChanging(value);
					this.SendPropertyChanging();
					this._job_start = value;
					this.SendPropertyChanged("job_start");
					this.Onjob_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_end", DbType="Date")]
		public System.Nullable<System.DateTime> job_end
		{
			get
			{
				return this._job_end;
			}
			set
			{
				if ((this._job_end != value))
				{
					this.Onjob_endChanging(value);
					this.SendPropertyChanging();
					this._job_end = value;
					this.SendPropertyChanged("job_end");
					this.Onjob_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_bill", Storage="_bills", ThisKey="empid", OtherKey="bill_by")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_checkin", Storage="_checkins", ThisKey="empid", OtherKey="checkin_by")]
		public EntitySet<checkin> checkins
		{
			get
			{
				return this._checkins;
			}
			set
			{
				this._checkins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_lab_report", Storage="_lab_reports", ThisKey="empid", OtherKey="laboratory_by")]
		public EntitySet<lab_report> lab_reports
		{
			get
			{
				return this._lab_reports;
			}
			set
			{
				this._lab_reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_medical_bill", Storage="_medical_bills", ThisKey="empid", OtherKey="med_by")]
		public EntitySet<medical_bill> medical_bills
		{
			get
			{
				return this._medical_bills;
			}
			set
			{
				this._medical_bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_patient", Storage="_patients", ThisKey="empid", OtherKey="reg_by")]
		public EntitySet<patient> patients
		{
			get
			{
				return this._patients;
			}
			set
			{
				this._patients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place", Storage="_places", ThisKey="empid", OtherKey="shift1")]
		public EntitySet<place> places
		{
			get
			{
				return this._places;
			}
			set
			{
				this._places.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place1", Storage="_places1", ThisKey="empid", OtherKey="shift2")]
		public EntitySet<place> places1
		{
			get
			{
				return this._places1;
			}
			set
			{
				this._places1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place2", Storage="_places2", ThisKey="empid", OtherKey="shift3")]
		public EntitySet<place> places2
		{
			get
			{
				return this._places2;
			}
			set
			{
				this._places2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_employee", Storage="_user", ThisKey="userid", OtherKey="userid", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._userid = value.userid;
					}
					else
					{
						this._userid = default(decimal);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_lab_reports(lab_report entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_lab_reports(lab_report entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_medical_bills(medical_bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_medical_bills(medical_bill entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_patients(patient entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_patients(patient entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_places(place entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_places(place entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_places1(place entity)
		{
			this.SendPropertyChanging();
			entity.employee1 = this;
		}
		
		private void detach_places1(place entity)
		{
			this.SendPropertyChanging();
			entity.employee1 = null;
		}
		
		private void attach_places2(place entity)
		{
			this.SendPropertyChanging();
			entity.employee2 = this;
		}
		
		private void detach_places2(place entity)
		{
			this.SendPropertyChanging();
			entity.employee2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lab_report")]
	public partial class lab_report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private decimal _checkin_no;
		
		private decimal _laboratory_no;
		
		private System.Nullable<decimal> _glucose;
		
		private System.Nullable<decimal> _hemoglobin;
		
		private System.Nullable<decimal> _rdc;
		
		private System.Nullable<decimal> _wbc;
		
		private System.Nullable<decimal> _afp;
		
		private System.Nullable<decimal> _hcg;
		
		private System.Nullable<decimal> _psa;
		
		private string _lab_description;
		
		private decimal _cost;
		
		private System.Nullable<System.DateTime> _lab_date;
		
		private decimal _laboratory_by;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<checkin> _checkin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void Oncheckin_noChanging(decimal value);
    partial void Oncheckin_noChanged();
    partial void Onlaboratory_noChanging(decimal value);
    partial void Onlaboratory_noChanged();
    partial void OnglucoseChanging(System.Nullable<decimal> value);
    partial void OnglucoseChanged();
    partial void OnhemoglobinChanging(System.Nullable<decimal> value);
    partial void OnhemoglobinChanged();
    partial void OnrdcChanging(System.Nullable<decimal> value);
    partial void OnrdcChanged();
    partial void OnwbcChanging(System.Nullable<decimal> value);
    partial void OnwbcChanged();
    partial void OnafpChanging(System.Nullable<decimal> value);
    partial void OnafpChanged();
    partial void OnhcgChanging(System.Nullable<decimal> value);
    partial void OnhcgChanged();
    partial void OnpsaChanging(System.Nullable<decimal> value);
    partial void OnpsaChanged();
    partial void Onlab_descriptionChanging(string value);
    partial void Onlab_descriptionChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    partial void Onlab_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlab_dateChanged();
    partial void Onlaboratory_byChanging(decimal value);
    partial void Onlaboratory_byChanged();
    #endregion
		
		public lab_report()
		{
			this._employee = default(EntityRef<employee>);
			this._checkin = default(EntityRef<checkin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal checkin_no
		{
			get
			{
				return this._checkin_no;
			}
			set
			{
				if ((this._checkin_no != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckin_noChanging(value);
					this.SendPropertyChanging();
					this._checkin_no = value;
					this.SendPropertyChanged("checkin_no");
					this.Oncheckin_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_laboratory_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal laboratory_no
		{
			get
			{
				return this._laboratory_no;
			}
			set
			{
				if ((this._laboratory_no != value))
				{
					this.Onlaboratory_noChanging(value);
					this.SendPropertyChanging();
					this._laboratory_no = value;
					this.SendPropertyChanged("laboratory_no");
					this.Onlaboratory_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_glucose", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> glucose
		{
			get
			{
				return this._glucose;
			}
			set
			{
				if ((this._glucose != value))
				{
					this.OnglucoseChanging(value);
					this.SendPropertyChanging();
					this._glucose = value;
					this.SendPropertyChanged("glucose");
					this.OnglucoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hemoglobin", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> hemoglobin
		{
			get
			{
				return this._hemoglobin;
			}
			set
			{
				if ((this._hemoglobin != value))
				{
					this.OnhemoglobinChanging(value);
					this.SendPropertyChanging();
					this._hemoglobin = value;
					this.SendPropertyChanged("hemoglobin");
					this.OnhemoglobinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdc", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> rdc
		{
			get
			{
				return this._rdc;
			}
			set
			{
				if ((this._rdc != value))
				{
					this.OnrdcChanging(value);
					this.SendPropertyChanging();
					this._rdc = value;
					this.SendPropertyChanged("rdc");
					this.OnrdcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wbc", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> wbc
		{
			get
			{
				return this._wbc;
			}
			set
			{
				if ((this._wbc != value))
				{
					this.OnwbcChanging(value);
					this.SendPropertyChanging();
					this._wbc = value;
					this.SendPropertyChanged("wbc");
					this.OnwbcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afp", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> afp
		{
			get
			{
				return this._afp;
			}
			set
			{
				if ((this._afp != value))
				{
					this.OnafpChanging(value);
					this.SendPropertyChanging();
					this._afp = value;
					this.SendPropertyChanged("afp");
					this.OnafpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hcg", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> hcg
		{
			get
			{
				return this._hcg;
			}
			set
			{
				if ((this._hcg != value))
				{
					this.OnhcgChanging(value);
					this.SendPropertyChanging();
					this._hcg = value;
					this.SendPropertyChanged("hcg");
					this.OnhcgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_psa", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> psa
		{
			get
			{
				return this._psa;
			}
			set
			{
				if ((this._psa != value))
				{
					this.OnpsaChanging(value);
					this.SendPropertyChanging();
					this._psa = value;
					this.SendPropertyChanged("psa");
					this.OnpsaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_description", DbType="VarChar(200)")]
		public string lab_description
		{
			get
			{
				return this._lab_description;
			}
			set
			{
				if ((this._lab_description != value))
				{
					this.Onlab_descriptionChanging(value);
					this.SendPropertyChanging();
					this._lab_description = value;
					this.SendPropertyChanged("lab_description");
					this.Onlab_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(8,2) NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_date", DbType="Date")]
		public System.Nullable<System.DateTime> lab_date
		{
			get
			{
				return this._lab_date;
			}
			set
			{
				if ((this._lab_date != value))
				{
					this.Onlab_dateChanging(value);
					this.SendPropertyChanging();
					this._lab_date = value;
					this.SendPropertyChanged("lab_date");
					this.Onlab_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_laboratory_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal laboratory_by
		{
			get
			{
				return this._laboratory_by;
			}
			set
			{
				if ((this._laboratory_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlaboratory_byChanging(value);
					this.SendPropertyChanging();
					this._laboratory_by = value;
					this.SendPropertyChanged("laboratory_by");
					this.Onlaboratory_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_lab_report", Storage="_employee", ThisKey="laboratory_by", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.lab_reports.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.lab_reports.Add(this);
						this._laboratory_by = value.empid;
					}
					else
					{
						this._laboratory_by = default(decimal);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_lab_report", Storage="_checkin", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no", IsForeignKey=true)]
		public checkin checkin
		{
			get
			{
				return this._checkin.Entity;
			}
			set
			{
				checkin previousValue = this._checkin.Entity;
				if (((previousValue != value) 
							|| (this._checkin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._checkin.Entity = null;
						previousValue.lab_reports.Remove(this);
					}
					this._checkin.Entity = value;
					if ((value != null))
					{
						value.lab_reports.Add(this);
						this._pid = value.pid;
						this._checkin_no = value.checkin_no;
					}
					else
					{
						this._pid = default(decimal);
						this._checkin_no = default(decimal);
					}
					this.SendPropertyChanged("checkin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.medical_bill")]
	public partial class medical_bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private decimal _checkin_no;
		
		private decimal _med_no;
		
		private decimal _med_by;
		
		private System.Nullable<System.DateTime> _med_date;
		
		private string _med_description;
		
		private decimal _cost;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<checkin> _checkin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void Oncheckin_noChanging(decimal value);
    partial void Oncheckin_noChanged();
    partial void Onmed_noChanging(decimal value);
    partial void Onmed_noChanged();
    partial void Onmed_byChanging(decimal value);
    partial void Onmed_byChanged();
    partial void Onmed_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmed_dateChanged();
    partial void Onmed_descriptionChanging(string value);
    partial void Onmed_descriptionChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    #endregion
		
		public medical_bill()
		{
			this._employee = default(EntityRef<employee>);
			this._checkin = default(EntityRef<checkin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal checkin_no
		{
			get
			{
				return this._checkin_no;
			}
			set
			{
				if ((this._checkin_no != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckin_noChanging(value);
					this.SendPropertyChanging();
					this._checkin_no = value;
					this.SendPropertyChanged("checkin_no");
					this.Oncheckin_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal med_no
		{
			get
			{
				return this._med_no;
			}
			set
			{
				if ((this._med_no != value))
				{
					this.Onmed_noChanging(value);
					this.SendPropertyChanging();
					this._med_no = value;
					this.SendPropertyChanged("med_no");
					this.Onmed_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal med_by
		{
			get
			{
				return this._med_by;
			}
			set
			{
				if ((this._med_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmed_byChanging(value);
					this.SendPropertyChanging();
					this._med_by = value;
					this.SendPropertyChanged("med_by");
					this.Onmed_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_date", DbType="Date")]
		public System.Nullable<System.DateTime> med_date
		{
			get
			{
				return this._med_date;
			}
			set
			{
				if ((this._med_date != value))
				{
					this.Onmed_dateChanging(value);
					this.SendPropertyChanging();
					this._med_date = value;
					this.SendPropertyChanged("med_date");
					this.Onmed_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_med_description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string med_description
		{
			get
			{
				return this._med_description;
			}
			set
			{
				if ((this._med_description != value))
				{
					this.Onmed_descriptionChanging(value);
					this.SendPropertyChanging();
					this._med_description = value;
					this.SendPropertyChanged("med_description");
					this.Onmed_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(8,2) NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_medical_bill", Storage="_employee", ThisKey="med_by", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.medical_bills.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.medical_bills.Add(this);
						this._med_by = value.empid;
					}
					else
					{
						this._med_by = default(decimal);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_medical_bill", Storage="_checkin", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no", IsForeignKey=true)]
		public checkin checkin
		{
			get
			{
				return this._checkin.Entity;
			}
			set
			{
				checkin previousValue = this._checkin.Entity;
				if (((previousValue != value) 
							|| (this._checkin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._checkin.Entity = null;
						previousValue.medical_bills.Remove(this);
					}
					this._checkin.Entity = value;
					if ((value != null))
					{
						value.medical_bills.Add(this);
						this._pid = value.pid;
						this._checkin_no = value.checkin_no;
					}
					else
					{
						this._pid = default(decimal);
						this._checkin_no = default(decimal);
					}
					this.SendPropertyChanged("checkin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.operation_th")]
	public partial class operation_th : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ot_no;
		
		private decimal _place_id;
		
		private string _ot_type;
		
		private EntityRef<place> _place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onot_noChanging(decimal value);
    partial void Onot_noChanged();
    partial void Onplace_idChanging(decimal value);
    partial void Onplace_idChanged();
    partial void Onot_typeChanging(string value);
    partial void Onot_typeChanged();
    #endregion
		
		public operation_th()
		{
			this._place = default(EntityRef<place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ot_no
		{
			get
			{
				return this._ot_no;
			}
			set
			{
				if ((this._ot_no != value))
				{
					this.Onot_noChanging(value);
					this.SendPropertyChanging();
					this._ot_no = value;
					this.SendPropertyChanged("ot_no");
					this.Onot_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", DbType="Decimal(4,0) NOT NULL")]
		public decimal place_id
		{
			get
			{
				return this._place_id;
			}
			set
			{
				if ((this._place_id != value))
				{
					if (this._place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplace_idChanging(value);
					this.SendPropertyChanging();
					this._place_id = value;
					this.SendPropertyChanged("place_id");
					this.Onplace_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ot_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string ot_type
		{
			get
			{
				return this._ot_type;
			}
			set
			{
				if ((this._ot_type != value))
				{
					this.Onot_typeChanging(value);
					this.SendPropertyChanging();
					this._ot_type = value;
					this.SendPropertyChanged("ot_type");
					this.Onot_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_operation_th", Storage="_place", ThisKey="place_id", OtherKey="place_id", IsForeignKey=true)]
		public place place
		{
			get
			{
				return this._place.Entity;
			}
			set
			{
				place previousValue = this._place.Entity;
				if (((previousValue != value) 
							|| (this._place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place.Entity = null;
						previousValue.operation_ths.Remove(this);
					}
					this._place.Entity = value;
					if ((value != null))
					{
						value.operation_ths.Add(this);
						this._place_id = value.place_id;
					}
					else
					{
						this._place_id = default(decimal);
					}
					this.SendPropertyChanged("place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private string _name;
		
		private string _contact_no;
		
		private string _address;
		
		private string _city;
		
		private bool _marital_status;
		
		private bool _gender;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private decimal _reg_by;
		
		private System.Nullable<System.DateTime> _reg_date;
		
		private EntitySet<checkin> _checkins;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncontact_noChanging(string value);
    partial void Oncontact_noChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onmarital_statusChanging(bool value);
    partial void Onmarital_statusChanged();
    partial void OngenderChanging(bool value);
    partial void OngenderChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void Onreg_byChanging(decimal value);
    partial void Onreg_byChanged();
    partial void Onreg_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreg_dateChanged();
    #endregion
		
		public patient()
		{
			this._checkins = new EntitySet<checkin>(new Action<checkin>(this.attach_checkins), new Action<checkin>(this.detach_checkins));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", AutoSync=AutoSync.OnInsert, DbType="Decimal(8,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="VarChar(13)")]
		public string contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="Bit NOT NULL")]
		public bool marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="Bit NOT NULL")]
		public bool gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal reg_by
		{
			get
			{
				return this._reg_by;
			}
			set
			{
				if ((this._reg_by != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreg_byChanging(value);
					this.SendPropertyChanging();
					this._reg_by = value;
					this.SendPropertyChanged("reg_by");
					this.Onreg_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_date", DbType="Date")]
		public System.Nullable<System.DateTime> reg_date
		{
			get
			{
				return this._reg_date;
			}
			set
			{
				if ((this._reg_date != value))
				{
					this.Onreg_dateChanging(value);
					this.SendPropertyChanging();
					this._reg_date = value;
					this.SendPropertyChanged("reg_date");
					this.Onreg_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_checkin", Storage="_checkins", ThisKey="pid", OtherKey="pid")]
		public EntitySet<checkin> checkins
		{
			get
			{
				return this._checkins;
			}
			set
			{
				this._checkins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_patient", Storage="_employee", ThisKey="reg_by", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.patients.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.patients.Add(this);
						this._reg_by = value.empid;
					}
					else
					{
						this._reg_by = default(decimal);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.places")]
	public partial class place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _place_id;
		
		private string _place_type;
		
		private string _description;
		
		private System.Nullable<decimal> _shift1;
		
		private System.Nullable<decimal> _shift2;
		
		private System.Nullable<decimal> _shift3;
		
		private EntitySet<operation_th> _operation_ths;
		
		private EntitySet<room> _rooms;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<employee> _employee1;
		
		private EntityRef<employee> _employee2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_idChanging(decimal value);
    partial void Onplace_idChanged();
    partial void Onplace_typeChanging(string value);
    partial void Onplace_typeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onshift1Changing(System.Nullable<decimal> value);
    partial void Onshift1Changed();
    partial void Onshift2Changing(System.Nullable<decimal> value);
    partial void Onshift2Changed();
    partial void Onshift3Changing(System.Nullable<decimal> value);
    partial void Onshift3Changed();
    #endregion
		
		public place()
		{
			this._operation_ths = new EntitySet<operation_th>(new Action<operation_th>(this.attach_operation_ths), new Action<operation_th>(this.detach_operation_ths));
			this._rooms = new EntitySet<room>(new Action<room>(this.attach_rooms), new Action<room>(this.detach_rooms));
			this._employee = default(EntityRef<employee>);
			this._employee1 = default(EntityRef<employee>);
			this._employee2 = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", AutoSync=AutoSync.OnInsert, DbType="Decimal(4,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal place_id
		{
			get
			{
				return this._place_id;
			}
			set
			{
				if ((this._place_id != value))
				{
					this.Onplace_idChanging(value);
					this.SendPropertyChanging();
					this._place_id = value;
					this.SendPropertyChanged("place_id");
					this.Onplace_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string place_type
		{
			get
			{
				return this._place_type;
			}
			set
			{
				if ((this._place_type != value))
				{
					this.Onplace_typeChanging(value);
					this.SendPropertyChanging();
					this._place_type = value;
					this.SendPropertyChanged("place_type");
					this.Onplace_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift1", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> shift1
		{
			get
			{
				return this._shift1;
			}
			set
			{
				if ((this._shift1 != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshift1Changing(value);
					this.SendPropertyChanging();
					this._shift1 = value;
					this.SendPropertyChanged("shift1");
					this.Onshift1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift2", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> shift2
		{
			get
			{
				return this._shift2;
			}
			set
			{
				if ((this._shift2 != value))
				{
					if (this._employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshift2Changing(value);
					this.SendPropertyChanging();
					this._shift2 = value;
					this.SendPropertyChanged("shift2");
					this.Onshift2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift3", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> shift3
		{
			get
			{
				return this._shift3;
			}
			set
			{
				if ((this._shift3 != value))
				{
					if (this._employee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshift3Changing(value);
					this.SendPropertyChanging();
					this._shift3 = value;
					this.SendPropertyChanged("shift3");
					this.Onshift3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_operation_th", Storage="_operation_ths", ThisKey="place_id", OtherKey="place_id")]
		public EntitySet<operation_th> operation_ths
		{
			get
			{
				return this._operation_ths;
			}
			set
			{
				this._operation_ths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_room", Storage="_rooms", ThisKey="place_id", OtherKey="place_id")]
		public EntitySet<room> rooms
		{
			get
			{
				return this._rooms;
			}
			set
			{
				this._rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place", Storage="_employee", ThisKey="shift1", OtherKey="empid", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.places.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.places.Add(this);
						this._shift1 = value.empid;
					}
					else
					{
						this._shift1 = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place1", Storage="_employee1", ThisKey="shift2", OtherKey="empid", IsForeignKey=true)]
		public employee employee1
		{
			get
			{
				return this._employee1.Entity;
			}
			set
			{
				employee previousValue = this._employee1.Entity;
				if (((previousValue != value) 
							|| (this._employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee1.Entity = null;
						previousValue.places1.Remove(this);
					}
					this._employee1.Entity = value;
					if ((value != null))
					{
						value.places1.Add(this);
						this._shift2 = value.empid;
					}
					else
					{
						this._shift2 = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_place2", Storage="_employee2", ThisKey="shift3", OtherKey="empid", IsForeignKey=true)]
		public employee employee2
		{
			get
			{
				return this._employee2.Entity;
			}
			set
			{
				employee previousValue = this._employee2.Entity;
				if (((previousValue != value) 
							|| (this._employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee2.Entity = null;
						previousValue.places2.Remove(this);
					}
					this._employee2.Entity = value;
					if ((value != null))
					{
						value.places2.Add(this);
						this._shift3 = value.empid;
					}
					else
					{
						this._shift3 = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("employee2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_operation_ths(operation_th entity)
		{
			this.SendPropertyChanging();
			entity.place = this;
		}
		
		private void detach_operation_ths(operation_th entity)
		{
			this.SendPropertyChanging();
			entity.place = null;
		}
		
		private void attach_rooms(room entity)
		{
			this.SendPropertyChanging();
			entity.place = this;
		}
		
		private void detach_rooms(room entity)
		{
			this.SendPropertyChanging();
			entity.place = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rooms")]
	public partial class room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _room_no;
		
		private decimal _place_id;
		
		private decimal _capacity;
		
		private EntitySet<checkin> _checkins;
		
		private EntityRef<place> _place;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onroom_noChanging(decimal value);
    partial void Onroom_noChanged();
    partial void Onplace_idChanging(decimal value);
    partial void Onplace_idChanged();
    partial void OncapacityChanging(decimal value);
    partial void OncapacityChanged();
    #endregion
		
		public room()
		{
			this._checkins = new EntitySet<checkin>(new Action<checkin>(this.attach_checkins), new Action<checkin>(this.detach_checkins));
			this._place = default(EntityRef<place>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_no", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal room_no
		{
			get
			{
				return this._room_no;
			}
			set
			{
				if ((this._room_no != value))
				{
					this.Onroom_noChanging(value);
					this.SendPropertyChanging();
					this._room_no = value;
					this.SendPropertyChanged("room_no");
					this.Onroom_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", DbType="Decimal(4,0) NOT NULL")]
		public decimal place_id
		{
			get
			{
				return this._place_id;
			}
			set
			{
				if ((this._place_id != value))
				{
					if (this._place.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplace_idChanging(value);
					this.SendPropertyChanging();
					this._place_id = value;
					this.SendPropertyChanged("place_id");
					this.Onplace_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Decimal(2,0) NOT NULL")]
		public decimal capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_checkin", Storage="_checkins", ThisKey="room_no", OtherKey="room")]
		public EntitySet<checkin> checkins
		{
			get
			{
				return this._checkins;
			}
			set
			{
				this._checkins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_room", Storage="_place", ThisKey="place_id", OtherKey="place_id", IsForeignKey=true)]
		public place place
		{
			get
			{
				return this._place.Entity;
			}
			set
			{
				place previousValue = this._place.Entity;
				if (((previousValue != value) 
							|| (this._place.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place.Entity = null;
						previousValue.rooms.Remove(this);
					}
					this._place.Entity = value;
					if ((value != null))
					{
						value.rooms.Add(this);
						this._place_id = value.place_id;
					}
					else
					{
						this._place_id = default(decimal);
					}
					this.SendPropertyChanged("place");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.room1 = this;
		}
		
		private void detach_checkins(checkin entity)
		{
			this.SendPropertyChanging();
			entity.room1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.treatment")]
	public partial class treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _pid;
		
		private decimal _checkin_no;
		
		private decimal _tr_no;
		
		private System.Nullable<System.DateTime> _tr_date;
		
		private decimal _checkup_by;
		
		private string _medical_pre;
		
		private string _lab_pre;
		
		private string _suggestion;
		
		private EntityRef<checkin> _checkin;
		
		private EntityRef<doctor> _doctor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(decimal value);
    partial void OnpidChanged();
    partial void Oncheckin_noChanging(decimal value);
    partial void Oncheckin_noChanged();
    partial void Ontr_noChanging(decimal value);
    partial void Ontr_noChanged();
    partial void Ontr_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ontr_dateChanged();
    partial void Oncheckup_byChanging(decimal value);
    partial void Oncheckup_byChanged();
    partial void Onmedical_preChanging(string value);
    partial void Onmedical_preChanged();
    partial void Onlab_preChanging(string value);
    partial void Onlab_preChanged();
    partial void OnsuggestionChanging(string value);
    partial void OnsuggestionChanged();
    #endregion
		
		public treatment()
		{
			this._checkin = default(EntityRef<checkin>);
			this._doctor = default(EntityRef<doctor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Decimal(8,0) NOT NULL", IsPrimaryKey=true)]
		public decimal pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkin_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal checkin_no
		{
			get
			{
				return this._checkin_no;
			}
			set
			{
				if ((this._checkin_no != value))
				{
					if (this._checkin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckin_noChanging(value);
					this.SendPropertyChanging();
					this._checkin_no = value;
					this.SendPropertyChanged("checkin_no");
					this.Oncheckin_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tr_no", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal tr_no
		{
			get
			{
				return this._tr_no;
			}
			set
			{
				if ((this._tr_no != value))
				{
					this.Ontr_noChanging(value);
					this.SendPropertyChanging();
					this._tr_no = value;
					this.SendPropertyChanged("tr_no");
					this.Ontr_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tr_date", DbType="Date")]
		public System.Nullable<System.DateTime> tr_date
		{
			get
			{
				return this._tr_date;
			}
			set
			{
				if ((this._tr_date != value))
				{
					this.Ontr_dateChanging(value);
					this.SendPropertyChanging();
					this._tr_date = value;
					this.SendPropertyChanged("tr_date");
					this.Ontr_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkup_by", DbType="Decimal(4,0) NOT NULL")]
		public decimal checkup_by
		{
			get
			{
				return this._checkup_by;
			}
			set
			{
				if ((this._checkup_by != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncheckup_byChanging(value);
					this.SendPropertyChanging();
					this._checkup_by = value;
					this.SendPropertyChanged("checkup_by");
					this.Oncheckup_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medical_pre", DbType="VarChar(200)")]
		public string medical_pre
		{
			get
			{
				return this._medical_pre;
			}
			set
			{
				if ((this._medical_pre != value))
				{
					this.Onmedical_preChanging(value);
					this.SendPropertyChanging();
					this._medical_pre = value;
					this.SendPropertyChanged("medical_pre");
					this.Onmedical_preChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lab_pre", DbType="VarChar(200)")]
		public string lab_pre
		{
			get
			{
				return this._lab_pre;
			}
			set
			{
				if ((this._lab_pre != value))
				{
					this.Onlab_preChanging(value);
					this.SendPropertyChanging();
					this._lab_pre = value;
					this.SendPropertyChanged("lab_pre");
					this.Onlab_preChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suggestion", DbType="VarChar(200)")]
		public string suggestion
		{
			get
			{
				return this._suggestion;
			}
			set
			{
				if ((this._suggestion != value))
				{
					this.OnsuggestionChanging(value);
					this.SendPropertyChanging();
					this._suggestion = value;
					this.SendPropertyChanged("suggestion");
					this.OnsuggestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="checkin_treatment", Storage="_checkin", ThisKey="pid,checkin_no", OtherKey="pid,checkin_no", IsForeignKey=true)]
		public checkin checkin
		{
			get
			{
				return this._checkin.Entity;
			}
			set
			{
				checkin previousValue = this._checkin.Entity;
				if (((previousValue != value) 
							|| (this._checkin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._checkin.Entity = null;
						previousValue.treatments.Remove(this);
					}
					this._checkin.Entity = value;
					if ((value != null))
					{
						value.treatments.Add(this);
						this._pid = value.pid;
						this._checkin_no = value.checkin_no;
					}
					else
					{
						this._pid = default(decimal);
						this._checkin_no = default(decimal);
					}
					this.SendPropertyChanged("checkin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_treatment", Storage="_doctor", ThisKey="checkup_by", OtherKey="doctorid", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.treatments.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.treatments.Add(this);
						this._checkup_by = value.doctorid;
					}
					else
					{
						this._checkup_by = default(decimal);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _userid;
		
		private string _password;
		
		private string _user_role;
		
		private bool _avaibility;
		
		private EntitySet<doctor> _doctors;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(decimal value);
    partial void OnuseridChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onuser_roleChanging(string value);
    partial void Onuser_roleChanged();
    partial void OnavaibilityChanging(bool value);
    partial void OnavaibilityChanged();
    #endregion
		
		public user()
		{
			this._doctors = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors), new Action<doctor>(this.detach_doctors));
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Decimal(4,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="VarChar(10)")]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this.Onuser_roleChanging(value);
					this.SendPropertyChanging();
					this._user_role = value;
					this.SendPropertyChanged("user_role");
					this.Onuser_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avaibility", DbType="Bit NOT NULL")]
		public bool avaibility
		{
			get
			{
				return this._avaibility;
			}
			set
			{
				if ((this._avaibility != value))
				{
					this.OnavaibilityChanging(value);
					this.SendPropertyChanging();
					this._avaibility = value;
					this.SendPropertyChanged("avaibility");
					this.OnavaibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_doctor", Storage="_doctors", ThisKey="userid", OtherKey="userid")]
		public EntitySet<doctor> doctors
		{
			get
			{
				return this._doctors;
			}
			set
			{
				this._doctors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_employee", Storage="_employees", ThisKey="userid", OtherKey="userid")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
